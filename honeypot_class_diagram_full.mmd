---
title: WindowsServerHoneypot Class Diagram (Full)
---
classDiagram
    class HoneypotOrchestrator {
        - config
        - logger
        - ssh_task
        - ssh_should_run
        + run()
        + run_services(services)
        + ssh_service_watcher()
        + ftp_service_watcher()
        + dns_service_watcher()
        + smb_service_watcher()
        + web_service_watcher()
    }
    class Logger {
        + info(msg, service)
        + warning(msg, service)
        + error(msg, service)
    }
    class WebHoneypot {
        + set_web_blocked(blocked)
        + start_web_server(config, logger)
        + stop_web_server()
        + set_web_status(status)
        + login()
        + dashboard()
        + logout()
    }
    class SSHService {
        + start_ssh_server(config, logger)
        + stop_ssh_server()
    }
    class FTPService {
        + start_ftp_server(config, logger)
        + stop_ftp_server()
    }
    class DNSService {
        + start_dns_server(config, logger)
        + stop_dns_server()
    }
    class SMBService {
        + start_smb_server(config, logger)
        + stop_smb_server()
    }
    class AdminService {
        + run_admin_app(port)
        + dashboard()
        + control_ssh(action)
        + control_ftp(action)
        + control_dns(action)
        + control_smb(action)
        + control_web(action)
        + view_log(logfile)
    }
    HoneypotOrchestrator --> Logger : uses
    HoneypotOrchestrator --> WebHoneypot : manages
    HoneypotOrchestrator --> SSHService : manages
    HoneypotOrchestrator --> FTPService : manages
    HoneypotOrchestrator --> DNSService : manages
    HoneypotOrchestrator --> SMBService : manages
    AdminService --> HoneypotOrchestrator : controls via status file
    AdminService --> Logger : reads logs
    WebHoneypot --> Logger : logs events
    SSHService --> Logger : logs events
    FTPService --> Logger : logs events
    DNSService --> Logger : logs events
    SMBService --> Logger : logs events
    AdminService --> Logger : logs admin actions
    class ServiceStatusJson {
        + ssh
        + ssh_desired
        + ftp
        + ftp_desired
        + dns
        + dns_desired
        + smb
        + smb_desired
        + web
        + web_desired
    }
    HoneypotOrchestrator --> ServiceStatusJson : reads/writes
    AdminService --> ServiceStatusJson : reads/writes
    WebHoneypot --> ServiceStatusJson : writes
    SSHService --> ServiceStatusJson : writes
    FTPService --> ServiceStatusJson : writes
    DNSService --> ServiceStatusJson : writes
    SMBService --> ServiceStatusJson : writes
